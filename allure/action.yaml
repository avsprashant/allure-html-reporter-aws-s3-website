name: 'allure-html-reporter-aws-s3-website'
description: 'Allure HTML Test Results with history to publish to AWS S3 Bucket'
branding:
  icon: 'layout'
  color: 'green'
inputs:
  allure_results:
    description: 'Allure test result data dir'
    required: false
    default: 'allure-results'
  allure_report:
    description: 'Allure report target dir'
    required: false
    default: 'allure-report'
  allure_history:
    description: 'Folder for allure history'
    required: false
    default: 'allure-history'
  keep_reports:
    description: 'Keep X last reports'
    required: false
    default: '20'    
  github_run_num:
    description: 'GitHub Actions build number'
    required: false
    default: ${{ github.run_number }}
  github_run_id:
    description: 'GitHub Actions run id'
    required: false
    default: ${{ github.run_id }}
  report_url:
    description: 'Use a custom URL instead of *.github.io'
    required: false
    default: ''
runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install allure
      run: |

        # install java in generic
        sudo apt update && sudo apt install default-jre -y
        java -version

        # Set the release version and Allure repository URL
        RELEASE="2.24.0"
        ALLURE_REPO="https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline"

        # Download and extract Allure
        sudo apt-get install -y wget
        wget --no-verbose -O allure-${RELEASE}.tgz ${ALLURE_REPO}/${RELEASE}/allure-commandline-${RELEASE}.tgz
        tar -xf allure-${RELEASE}.tgz

        # Add Allure to the PATH
        export PATH="$PATH:$(pwd)/allure-${RELEASE}/bin"
        echo "PATH=\"$PATH:$(pwd)/allure-${RELEASE}/bin\"" >> $GITHUB_ENV

        # Print Allure version
        allure --version
      
      shell: bash
      
    - name: Generate allure results
      run: |
        echo "Generated results"
      shell: bash

    - name: Upload allure results
      run: |
          #this isn't required if html file already present
          cat > index-template.html <<EOF

          <!DOCTYPE html>
          <html>
          <head>
          <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
          <title>Test Results</title>
          <style type="text/css">
            BODY { font-family : monospace, sans-serif;  color: black;}
            P { font-family : monospace, sans-serif; color: black; margin:0px; padding: 0px;}
            A:visited { text-decoration : none; margin : 0px; padding : 0px;}
            A:link    { text-decoration : none; margin : 0px; padding : 0px;}
            A:hover   { text-decoration: underline; background-color : yellow; margin : 0px; padding : 0px;}
            A:active  { margin : 0px; padding : 0px;}
            .VERSION { font-size: small; font-family : arial, sans-serif; }
            .NORM  { color: black;  }
            .FIFO  { color: purple; }
            .CHAR  { color: yellow; }
            .DIR   { color: blue;   }
            .BLOCK { color: yellow; }
            .LINK  { color: aqua;   }
            .SOCK  { color: fuchsia;}
            .EXEC  { color: green;  }
          </style>
          </head>
          <body>
            <h1>Test Results</h1><p>
            <a href=".">.</a><br>

          EOF

          #remove later
          ls -l

          export AWS_S3_BUCKET=habitat-build-artifacts
          export S3_WEBSITE_URL=https://artifact.habitatenergy.online/allure/${INPUT_GITHUB_REPO}/

          mkdir -p ./${INPUT_ALLURE_HISTORY}

          echo '{"name":"GitHub Actions","type":"github","reportName":"Allure Report with history",' > executor.json
          echo "\"url\":\"${S3_WEBSITE_URL}\"," >> executor.json
          # echo "\"reportUrl\":\"${GITHUB_PAGES_WEBSITE_URL}/${INPUT_GITHUB_RUN_NUM}/\"," >> executor.json
          echo "\"buildUrl\":\"https://github.com/${INPUT_GITHUB_REPO}/actions/runs/${INPUT_GITHUB_RUN_ID}\"," >> executor.json
          echo "\"buildName\":\"GitHub Actions Run #${INPUT_GITHUB_RUN_ID}\",\"buildOrder\":\"${INPUT_GITHUB_RUN_NUM}\"}" >> executor.json
          mv ./executor.json ./${INPUT_ALLURE_RESULTS}

          #environment.properties
          echo "URL=${S3_WEBSITE_URL}" >> ./${INPUT_ALLURE_RESULTS}/environment.properties

          allure generate --clean ${INPUT_ALLURE_RESULTS} -o ${INPUT_ALLURE_REPORT}
          ls -l ${INPUT_ALLURE_REPORT}

          echo "copy ${INPUT_ALLURE_REPORT} to ${INPUT_ALLURE_HISTORY}/${INPUT_GITHUB_RUN_NUM}"
          cp -r ./${INPUT_ALLURE_REPORT}/. ./${INPUT_ALLURE_HISTORY}/${INPUT_GITHUB_RUN_NUM}
          echo "copy ${INPUT_ALLURE_REPORT} history to /${INPUT_ALLURE_HISTORY}/last-history"
          cp -r ./${INPUT_ALLURE_REPORT}/history/. ./${INPUT_ALLURE_HISTORY}/last-history

          cat index-template.html > ./${INPUT_ALLURE_HISTORY}/index.html

          echo "├── <a href='./${INPUT_GITHUB_RUN_NUM}/index.html'>Latest Test Results - RUN ID: ${INPUT_GITHUB_RUN_NUM}</a><br>" >> ./${INPUT_ALLURE_HISTORY}/index.html;
          
          # Check if dir/repo exists
          # INPUT_GITHUB_REPO=test
          # if AWS_PROFILE=uk aws s3api head-object --bucket habitat-build-artifacts --key allure/${INPUT_GITHUB_REPO}/ > /dev/null 2>&1; then
              AWS_PROFILE=uk aws s3 ls s3://${AWS_S3_BUCKET}/allure/${INPUT_GITHUB_REPO}/  |  grep "PRE" | sed 's/PRE //'  | sed 's/.$//' | sort -nr | while read line;
              do
                echo "├── <a href='./${line}/'>RUN ID: ${line}</a><br>" >> "./${INPUT_ALLURE_HISTORY}/index.html";
              done;
          # fi
          echo "</html>" >> ./${INPUT_ALLURE_HISTORY}/index.html;

          echo "copy allure-results to ${INPUT_ALLURE_HISTORY}/${INPUT_GITHUB_RUN_NUM}"
          cp -R ./${INPUT_ALLURE_RESULTS}/. ./${INPUT_ALLURE_HISTORY}/${INPUT_GITHUB_RUN_NUM}

          # we don't want this i guess
          # Override default AWS endpoint if user sets AWS_S3_ENDPOINT.
          if [ -n "$AWS_S3_ENDPOINT" ]; then
            ENDPOINT_APPEND="--endpoint-url $AWS_S3_ENDPOINT"
          fi

          echo "Upload to s3"
          AWS_PROFILE=uk aws s3 sync ./${INPUT_ALLURE_HISTORY}/${INPUT_GITHUB_RUN_NUM} s3://${AWS_S3_BUCKET}/allure/${INPUT_GITHUB_REPO}/${INPUT_GITHUB_RUN_NUM}/ \
                --no-progress \
                ${ENDPOINT_APPEND} $*
          AWS_PROFILE=uk aws s3 cp ${INPUT_ALLURE_HISTORY}/index.html s3://${AWS_S3_BUCKET}/allure/${INPUT_GITHUB_REPO}/index.html \
                --no-progress

          echo "Delete history"
          COUNT=$( sh -c "AWS_PROFILE=uk aws s3 ls s3://${AWS_S3_BUCKET}/allure/${INPUT_GITHUB_REPO}/" | sort -n | grep "PRE" | wc -l )
          echo "current folders in allure-history: ${COUNT}"
          echo "keep reports count ${INPUT_KEEP_REPORTS}"
          INPUT_KEEP_REPORTS=$((INPUT_KEEP_REPORTS+1))
          if (( COUNT > INPUT_KEEP_REPORTS )); then
            NUMBER_OF_FOLDERS_TO_DELETE=$((${COUNT}-${INPUT_KEEP_REPORTS}))
            echo "number of folders to delete ${NUMBER_OF_FOLDERS_TO_DELETE}"
            sh -c "AWS_PROFILE=uk aws s3 ls s3://${AWS_S3_BUCKET}/allure/${INPUT_GITHUB_REPO}/" |  grep "PRE" | sed 's/PRE //' | sed 's/.$//' | head -n ${NUMBER_OF_FOLDERS_TO_DELETE} | sort -n | while read -r line;
              do
                sh -c "AWS_PROFILE=uk aws s3 rm s3://${AWS_S3_BUCKET}/allure/${INPUT_GITHUB_REPO}/${line}/ --recursive";
                echo "deleted prefix folder : ${line}";
              done;
          fi
      shell: bash
      env:
        INPUT_ALLURE_HISTORY: ${{ inputs.allure_history }}
        INPUT_ALLURE_RESULTS: ${{ inputs.allure_results }}
        INPUT_ALLURE_REPORT: ${{ inputs.allure_report }}
        INPUT_KEEP_REPORTS: ${{ inputs.keep_reports }}
        INPUT_GITHUB_RUN_NUM: ${{ inputs.github_run_num }}
        INPUT_GITHUB_RUN_ID: ${{ inputs.github_run_id }}
        INPUT_REPORT_URL: ${{ inputs.report_url }}
        INPUT_GITHUB_REPO: ${{github.repository}}
        